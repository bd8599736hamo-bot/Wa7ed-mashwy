import React, { useState } from "react";

// Single-file React component for a neon-styled game store 'space9' // Tailwind CSS is assumed to be available in the project // Uses inline SVG icons for neon look. Export default component.

export default function Space9Store() { const categories = [ { key: 'action', label: 'ÿ≠ÿ±ŸÉÿ©', icon: ActionIcon }, { key: 'racing', label: 'ÿ≥ÿ®ÿßŸÇ', icon: RacingIcon }, { key: 'puzzle', label: 'ÿ£ŸÑÿ∫ÿßÿ≤', icon: PuzzleIcon }, { key: 'sports', label: 'ÿ£ŸÑÿπÿßÿ® ÿ±Ÿäÿßÿ∂Ÿäÿ©', icon: SportsIcon }, ];

const sampleProducts = [ { id: 1, title: 'HyperStrike', category: 'action', price: 29.99 }, { id: 2, title: 'Neon Rally', category: 'racing', price: 24.99 }, { id: 3, title: 'Mind Maze', category: 'puzzle', price: 14.99 }, { id: 4, title: 'Pro League X', category: 'sports', price: 39.99 }, ];

const [activeCategory, setActiveCategory] = useState('action'); const [cart, setCart] = useState([]); const [shipping, setShipping] = useState(4.99);

function addToCart(product) { setCart(prev => { const found = prev.find(p => p.id === product.id); if (found) return prev.map(p => p.id === product.id ? { ...p, qty: p.qty + 1 } : p); return [...prev, { ...product, qty: 1 }]; }); }

function removeFromCart(id) { setCart(prev => prev.filter(p => p.id !== id)); }

function changeQty(id, qty) { setCart(prev => prev.map(p => p.id === id ? { ...p, qty: Math.max(1, qty) } : p)); }

const subtotal = cart.reduce((s, p) => s + p.price * p.qty, 0); const total = subtotal + (cart.length ? parseFloat(shipping || 0) : 0);

return ( <div className="min-h-screen bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-[#060617] via-[#071028] to-[#02010a] text-white font-sans"> {/* Top bar */} <header className="flex items-center justify-between px-6 py-4 border-b border-white/5"> <div className="flex items-center gap-6"> <nav className="space-x-4 hidden md:flex"> <a href="#" className="nav-link">Home</a> <a href="#" className="nav-link">Store</a> <a href="#" className="nav-link">About</a> <a href="#" className="nav-link">Contact</a> </nav>

<div className="flex items-center gap-4">
        <div className="p-2 rounded-md neon-icon">
          <SearchIcon />
        </div>
        <div className="p-2 rounded-md neon-icon">
          <UserIcon />
        </div>
      </div>
    </div>

    {/* Site name on the right as requested */}
    <div className="ml-auto text-right">
      <div className="text-3xl md:text-4xl font-extrabold tracking-tight neon-text mr-2 select-none" style={{fontFamily: '"Russo One", sans-serif'}}>
        space9
      </div>
      <div className="text-xs text-white/60">The Neon Game Market</div>
    </div>
  </header>

  <main className="container mx-auto px-6 py-10 grid grid-cols-1 lg:grid-cols-4 gap-8">
    {/* Left: categories */}
    <aside className="lg:col-span-1 bg-white/3 rounded-2xl p-6 backdrop-blur-md border border-white/5">
      <h3 className="text-lg font-semibold mb-4">ÿ£ŸÇÿ≥ÿßŸÖ ÿßŸÑÿ£ŸÑÿπÿßÿ®</h3>
      <ul className="space-y-3">
        {categories.map(cat => (
          <li key={cat.key}>
            <button
              onClick={() => setActiveCategory(cat.key)}
              className={`w-full flex items-center gap-3 p-3 rounded-xl transition ${activeCategory === cat.key ? 'bg-gradient-to-r from-[#00F0FF]/20 to-[#A200FF]/15 border border-[#00F0FF]/30' : 'hover:bg-white/2'}`}>
              <span className="w-10 h-10 flex items-center justify-center neon-icon-small">
                <cat.icon />
              </span>
              <span className="flex-1 text-right font-medium">{cat.label}</span>
            </button>
          </li>
        ))}
      </ul>

      <div className="mt-6 text-sm text-white/70">ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ ÿ£Ÿä ŸÇÿ≥ŸÖ ŸÑÿπÿ±ÿ∂ ÿßŸÑÿ£ŸÑÿπÿßÿ® ÿßŸÑŸÖÿ™ŸàŸÅÿ±ÿ©.</div>
    </aside>

    {/* Middle: product grid */}
    <section className="lg:col-span-2">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-2xl font-bold neon-text">{categories.find(c => c.key === activeCategory)?.label} Games</h2>
        <div className="text-sm text-white/60">{sampleProducts.filter(p => p.category === activeCategory).length} items</div>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
        {sampleProducts.filter(p => p.category === activeCategory).map(prod => (
          <article key={prod.id} className="p-4 rounded-2xl bg-white/3 border border-white/5 hover:scale-[1.01] transition-transform">
            <div className="h-40 rounded-lg mb-3 bg-gradient-to-br from-[#0f172a] to-[#031021] flex items-center justify-center neon-card">
              <div className="text-center">
                <div className="text-xl font-semibold">{prod.title}</div>
                <div className="text-sm text-white/60">{prod.category}</div>
              </div>
            </div>
            <div className="flex items-center justify-between">
              <div>
                <div className="text-lg font-bold">${prod.price.toFixed(2)}</div>
                <div className="text-xs text-white/60">Digital License</div>
              </div>
              <div>
                <button onClick={() => addToCart(prod)} className="px-4 py-2 rounded-lg neon-button">Add</button>
              </div>
            </div>
          </article>
        ))}
      </div>
    </section>

    {/* Right: cart and shipping */}
    <aside className="lg:col-span-1 bg-white/3 rounded-2xl p-6 backdrop-blur-md border border-white/5">
      <h3 className="text-lg font-semibold mb-4 neon-text">Shopping Cart</h3>

      {cart.length === 0 ? (
        <div className="text-white/60">ÿ≥ŸÑÿ© ÿßŸÑŸÖÿ¥ÿ™ÿ±Ÿäÿßÿ™ ŸÅÿßÿ±ÿ∫ÿ©.</div>
      ) : (
        <div className="space-y-4">
          {cart.map(item => (
            <div key={item.id} className="flex items-center justify-between">
              <div className="text-right">
                <div className="font-medium">{item.title}</div>
                <div className="text-xs text-white/60">${item.price.toFixed(2)} √ó {item.qty}</div>
              </div>
              <div className="flex items-center gap-2">
                <input type="number" min="1" value={item.qty} onChange={e => changeQty(item.id, parseInt(e.target.value || '1'))} className="w-16 rounded-md bg-white/5 text-right p-1" />
                <button onClick={() => removeFromCart(item.id)} className="text-xs underline">Remove</button>
              </div>
            </div>
          ))}

          <div className="pt-4 border-t border-white/5">
            <label className="block text-sm mb-2">Shipping Cost (USD)</label>
            <input type="number" step="0.01" value={shipping} onChange={e => setShipping(e.target.value)} className="w-full rounded-md bg-white/5 p-2 text-right" />

            <div className="mt-3 text-sm">
              <div className="flex justify-between"><span>Subtotal</span><span>${subtotal.toFixed(2)}</span></div>
              <div className="flex justify-between"><span>Shipping</span><span>${cart.length ? parseFloat(shipping || 0).toFixed(2) : '0.00'}</span></div>
              <div className="flex justify-between font-bold mt-2 text-xl neon-text"><span>Total</span><span>${cart.length ? total.toFixed(2) : '0.00'}</span></div>
            </div>

            <button className="mt-4 w-full py-2 rounded-lg neon-button">Checkout</button>
          </div>
        </div>
      )}

      <div className="mt-6 text-xs text-white/60">Made by web software engineer: Mohamed Aliüë®üèª‚Äçüíª</div>
    </aside>
  </main>

  <footer className="text-center py-6 text-white/50">¬© {new Date().getFullYear()} space9 ‚Äî Neon Game Store</footer>

  {/* Styles */}
  <style jsx>{`
    .neon-text {
      text-shadow: 0 0 6px rgba(162,0,255,0.7), 0 0 20px rgba(0,240,255,0.12);
      color: #fff;
    }

    .neon-icon svg { filter: drop-shadow(0 0 8px rgba(0,240,255,0.5)); }
    .neon-icon-small svg { filter: drop-shadow(0 0 6px rgba(162,0,255,0.6)); }
    .neon-button { background: linear-gradient(90deg,#00f0ff44,#a200ff22); border: 1px solid rgba(255,255,255,0.06); padding: 8px 12px; }
    .neon-card { box-shadow: 0 8px 30px rgba(162,0,255,0.06); border: 1px solid rgba(255,255,255,0.03); }

    .nav-link { padding: 6px 10px; border-radius: 8px; color: #cfefff; }
    .nav-link:hover { background: linear-gradient(90deg,#00f0ff10,#a200ff10); }

    /* small responsive tweaks */
    @media (max-width: 1024px) {
      header { padding-left: 1rem; padding-right: 1rem }
    }
  `}</style>
</div>

); }

/* ---------- Icons (inline SVG for neon feel) ---------- */

function ActionIcon() { return ( <svg width="22" height="22" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M3 12h6l3-8 3 16 3-10 3 4" stroke="#00F0FF" strokeWidth="1.6" strokeLinecap="round" strokeLinejoin="round" /> </svg> ); }

function RacingIcon() { return ( <svg width="22" height="22" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M2 12s4-8 10-8 10 8 10 8-4 8-10 8S2 12 2 12z" stroke="#A200FF" strokeWidth="1.6" strokeLinecap="round" strokeLinejoin="round" /> <circle cx="8" cy="12" r="1" fill="#00F0FF" /> <circle cx="16" cy="12" r="1" fill="#00F0FF" /> </svg> ); }

function PuzzleIcon() { return ( <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M3 13v5a1 1 0 001 1h5v-4a2 2 0 012-2h1v-2a2 2 0 012-2h4V6a1 1 0 00-1-1h-5v4a2 2 0 01-2 2h-1v2a2 2 0 01-2 2H4a1 1 0 00-1 1z" stroke="#00F0FF" strokeWidth="1.4" strokeLinecap="round" strokeLinejoin="round" /> </svg> ); }

function SportsIcon() { return ( <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M12 2v6M12 22v-6M4.2 5.6l4.2 2.4M19.8 18.4l-4.2-2.4M4.2 18.4L8.4 16M19.8 5.6L15.6 8" stroke="#A200FF" strokeWidth="1.4" strokeLinecap="round" strokeLinejoin="round" /> </svg> ); }

function SearchIcon() { return ( <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M11 19a8 8 0 100-16 8 8 0 000 16z" stroke="#00F0FF" strokeWidth="1.4" strokeLinecap="round" strokeLinejoin="round" /> <path d="M21 21l-4.35-4.35" stroke="#00F0FF" strokeWidth="1.4" strokeLinecap="round" strokeLinejoin="round" /> </svg> ); }

function UserIcon() { return ( <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M20 21v-2a4 4 0 00-3-3.87" stroke="#A200FF" strokeWidth="1.4" strokeLinecap="round" strokeLinejoin="round" /> <path d="M4 21v-2a4 4 0 013-3.87" stroke="#A200FF" strokeWidth="1.4" strokeLinecap="round" strokeLinejoin="round" /> <path d="M12 7a4 4 0 100-8 4 4 0 000 8z" stroke="#00F0FF" strokeWidth="1.4" strokeLinecap="round" strokeLinejoin="round" /> </svg> ); }

